{
  "info": {
    "name": "Merged Video Challenge API Tests",
    "description": "Comprehensive API tests for merged video challenge creation with segment timecodes",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "your-jwt-token-here",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Create Valid Merged Video Challenge",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"My Merged Video Challenge\",\n  \"statements\": [\n    {\n      \"media_file_id\": \"upload-session-1\",\n      \"duration_seconds\": 8.5\n    },\n    {\n      \"media_file_id\": \"upload-session-2\",\n      \"duration_seconds\": 8.7\n    },\n    {\n      \"media_file_id\": \"upload-session-3\",\n      \"duration_seconds\": 7.8\n    }\n  ],\n  \"lie_statement_index\": 1,\n  \"tags\": [\"postman-test\", \"merged-video\"],\n  \"is_merged_video\": true,\n  \"merged_video_metadata\": {\n    \"total_duration\": 25.0,\n    \"segments\": [\n      {\n        \"start_time\": 0.0,\n        \"end_time\": 8.5,\n        \"duration\": 8.5,\n        \"statement_index\": 0\n      },\n      {\n        \"start_time\": 8.5,\n        \"end_time\": 17.2,\n        \"duration\": 8.7,\n        \"statement_index\": 1\n      },\n      {\n        \"start_time\": 17.2,\n        \"end_time\": 25.0,\n        \"duration\": 7.8,\n        \"statement_index\": 2\n      }\n    ],\n    \"video_file_id\": \"merged-video-postman-test\",\n    \"compression_applied\": true,\n    \"original_total_duration\": 30.0\n  }\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/challenges/",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "challenges", ""]
        },
        "description": "Creates a valid merged video challenge with proper segment metadata"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test(\"Response has challenge_id\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('challenge_id');",
              "    pm.globals.set('challenge_id', jsonData.challenge_id);",
              "});",
              "",
              "pm.test(\"Challenge is merged video\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.is_merged_video).to.eql(true);",
              "});",
              "",
              "pm.test(\"Has merged video metadata\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('merged_video_metadata');",
              "    pm.expect(jsonData.merged_video_metadata.segments).to.have.lengthOf(3);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "2. Get Challenge Segment Metadata",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/v1/challenges/{{challenge_id}}/segments",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "challenges", "{{challenge_id}}", "segments"]
        },
        "description": "Retrieves segment metadata for the created challenge"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has segment data\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.is_merged_video).to.eql(true);",
              "    pm.expect(jsonData.segments).to.have.lengthOf(3);",
              "    pm.expect(jsonData.total_duration).to.eql(25.0);",
              "});",
              "",
              "pm.test(\"Segments have correct structure\", function () {",
              "    var jsonData = pm.response.json();",
              "    jsonData.segments.forEach(function(segment) {",
              "        pm.expect(segment).to.have.property('statement_id');",
              "        pm.expect(segment).to.have.property('statement_index');",
              "        pm.expect(segment).to.have.property('start_time');",
              "        pm.expect(segment).to.have.property('end_time');",
              "        pm.expect(segment).to.have.property('duration');",
              "        pm.expect(segment).to.have.property('statement_type');",
              "    });",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "3. Error: Missing Merged Video Metadata",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Missing Metadata Challenge\",\n  \"statements\": [\n    {\n      \"media_file_id\": \"upload-session-1\",\n      \"duration_seconds\": 8.5\n    },\n    {\n      \"media_file_id\": \"upload-session-2\",\n      \"duration_seconds\": 8.7\n    },\n    {\n      \"media_file_id\": \"upload-session-3\",\n      \"duration_seconds\": 7.8\n    }\n  ],\n  \"lie_statement_index\": 1,\n  \"is_merged_video\": true\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/challenges/",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "challenges", ""]
        },
        "description": "Tests error handling when merged_video_metadata is missing but is_merged_video is true"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test(\"Error message mentions missing metadata\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.detail).to.include('metadata is required');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "4. Error: Overlapping Segments",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Overlapping Segments Challenge\",\n  \"statements\": [\n    {\n      \"media_file_id\": \"upload-session-1\",\n      \"duration_seconds\": 10.0\n    },\n    {\n      \"media_file_id\": \"upload-session-2\",\n      \"duration_seconds\": 10.0\n    },\n    {\n      \"media_file_id\": \"upload-session-3\",\n      \"duration_seconds\": 7.0\n    }\n  ],\n  \"lie_statement_index\": 1,\n  \"is_merged_video\": true,\n  \"merged_video_metadata\": {\n    \"total_duration\": 25.0,\n    \"segments\": [\n      {\n        \"start_time\": 0.0,\n        \"end_time\": 10.0,\n        \"duration\": 10.0,\n        \"statement_index\": 0\n      },\n      {\n        \"start_time\": 8.0,\n        \"end_time\": 18.0,\n        \"duration\": 10.0,\n        \"statement_index\": 1\n      },\n      {\n        \"start_time\": 18.0,\n        \"end_time\": 25.0,\n        \"duration\": 7.0,\n        \"statement_index\": 2\n      }\n    ],\n    \"video_file_id\": \"overlapping-test\"\n  }\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/challenges/",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "challenges", ""]
        },
        "description": "Tests error handling when segments overlap (segment 1 starts before segment 0 ends)"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 422\", function () {",
              "    pm.response.to.have.status(422);",
              "});",
              "",
              "pm.test(\"Error message mentions overlap\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(JSON.stringify(jsonData)).to.include('overlap');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "5. Error: Duration Mismatch",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Duration Mismatch Challenge\",\n  \"statements\": [\n    {\n      \"media_file_id\": \"upload-session-1\",\n      \"duration_seconds\": 8.5\n    },\n    {\n      \"media_file_id\": \"upload-session-2\",\n      \"duration_seconds\": 8.7\n    },\n    {\n      \"media_file_id\": \"upload-session-3\",\n      \"duration_seconds\": 7.8\n    }\n  ],\n  \"lie_statement_index\": 1,\n  \"is_merged_video\": true,\n  \"merged_video_metadata\": {\n    \"total_duration\": 25.0,\n    \"segments\": [\n      {\n        \"start_time\": 0.0,\n        \"end_time\": 8.5,\n        \"duration\": 15.0,\n        \"statement_index\": 0\n      },\n      {\n        \"start_time\": 8.5,\n        \"end_time\": 17.2,\n        \"duration\": 8.7,\n        \"statement_index\": 1\n      },\n      {\n        \"start_time\": 17.2,\n        \"end_time\": 25.0,\n        \"duration\": 7.8,\n        \"statement_index\": 2\n      }\n    ],\n    \"video_file_id\": \"duration-mismatch-test\"\n  }\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/challenges/",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "challenges", ""]
        },
        "description": "Tests error handling when segment duration doesn't match calculated duration (end_time - start_time)"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 422\", function () {",
              "    pm.response.to.have.status(422);",
              "});",
              "",
              "pm.test(\"Error message mentions duration mismatch\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(JSON.stringify(jsonData)).to.include('Duration mismatch');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "6. Error: Invalid Segment Index",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Invalid Index Challenge\",\n  \"statements\": [\n    {\n      \"media_file_id\": \"upload-session-1\",\n      \"duration_seconds\": 8.5\n    },\n    {\n      \"media_file_id\": \"upload-session-2\",\n      \"duration_seconds\": 8.7\n    },\n    {\n      \"media_file_id\": \"upload-session-3\",\n      \"duration_seconds\": 7.8\n    }\n  ],\n  \"lie_statement_index\": 1,\n  \"is_merged_video\": true,\n  \"merged_video_metadata\": {\n    \"total_duration\": 25.0,\n    \"segments\": [\n      {\n        \"start_time\": 0.0,\n        \"end_time\": 8.5,\n        \"duration\": 8.5,\n        \"statement_index\": 0\n      },\n      {\n        \"start_time\": 8.5,\n        \"end_time\": 17.2,\n        \"duration\": 8.7,\n        \"statement_index\": 1\n      },\n      {\n        \"start_time\": 17.2,\n        \"end_time\": 25.0,\n        \"duration\": 7.8,\n        \"statement_index\": 5\n      }\n    ],\n    \"video_file_id\": \"invalid-index-test\"\n  }\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/challenges/",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "challenges", ""]
        },
        "description": "Tests error handling when segment has invalid statement_index (should be 0, 1, or 2)"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 422\", function () {",
              "    pm.response.to.have.status(422);",
              "});",
              "",
              "pm.test(\"Error message mentions invalid index\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(JSON.stringify(jsonData)).to.include('less than or equal to 2');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "7. Error: Total Duration Mismatch",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Total Duration Mismatch Challenge\",\n  \"statements\": [\n    {\n      \"media_file_id\": \"upload-session-1\",\n      \"duration_seconds\": 8.5\n    },\n    {\n      \"media_file_id\": \"upload-session-2\",\n      \"duration_seconds\": 8.7\n    },\n    {\n      \"media_file_id\": \"upload-session-3\",\n      \"duration_seconds\": 7.8\n    }\n  ],\n  \"lie_statement_index\": 1,\n  \"is_merged_video\": true,\n  \"merged_video_metadata\": {\n    \"total_duration\": 30.0,\n    \"segments\": [\n      {\n        \"start_time\": 0.0,\n        \"end_time\": 8.5,\n        \"duration\": 8.5,\n        \"statement_index\": 0\n      },\n      {\n        \"start_time\": 8.5,\n        \"end_time\": 17.2,\n        \"duration\": 8.7,\n        \"statement_index\": 1\n      },\n      {\n        \"start_time\": 17.2,\n        \"end_time\": 25.0,\n        \"duration\": 7.8,\n        \"statement_index\": 2\n      }\n    ],\n    \"video_file_id\": \"total-duration-mismatch-test\"\n  }\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/challenges/",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "challenges", ""]
        },
        "description": "Tests error handling when total_duration doesn't match the last segment's end_time"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 422\", function () {",
              "    pm.response.to.have.status(422);",
              "});",
              "",
              "pm.test(\"Error message mentions total duration\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(JSON.stringify(jsonData)).to.include('Total duration');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "8. Get Challenge Stats",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/v1/challenges/{{challenge_id}}/stats",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "challenges", "{{challenge_id}}", "stats"]
        },
        "description": "Gets statistics for the created challenge, including merged video information"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Stats include merged video info\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.is_merged_video).to.eql(true);",
              "    pm.expect(jsonData.has_segment_metadata).to.eql(true);",
              "});",
              "",
              "pm.test(\"Stats have expected fields\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('challenge_id');",
              "    pm.expect(jsonData).to.have.property('view_count');",
              "    pm.expect(jsonData).to.have.property('guess_count');",
              "    pm.expect(jsonData).to.have.property('accuracy_rate');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}